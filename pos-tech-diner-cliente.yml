# apiVersion: v1
# kind: Namespace
# metadata:
#   name: postech

---
apiVersion: v1
kind: Secret
metadata:
  name: pos-tech-diner-cliente-secret
  namespace: postech
data:
  TESTE: "dGVzdGU="

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pos-tech-diner-cliente-config-map
  namespace: postech
data:
  DATABASE_URL:
  AWS_ACESS_KEY_ID:
  AWS_SECRET_ACESS_KEY:
  AWS_REGION:
  COGNITO_URL:
  COGNITO_CLIENT_ID:
  COGNITO_HEADER_SIGNUP:
  GOGNITO_HEADER_SIGNIN:
  COGNITO_HEADER_GETUSER:
  DEFAULT_USER_NOME:
  DEFAULT_USER_SENHA:

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pos-tech-diner-cliente-deployment
  namespace: postech
  labels:
    app: pos-tech-diner-cliente-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: pos-tech-diner-cliente-deployment
    spec:
      containers:
        - name: pos-tech-diner-cliente-image
          image:
          ports:
            - containerPort: 3333
          envFrom:
            - secretRef:
                name: "pos-tech-diner-cliente-secret"
            - configMapRef:
                name: "pos-tech-diner-cliente-config-map"
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 500m
  selector:
    matchLabels:
      app: pos-tech-diner-cliente-deployment

---
apiVersion: v1
kind: Service
metadata:
  name: pos-tech-diner-cliente-service
  namespace: postech
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-name: test
spec:
  ports:
    - port: 80
      targetPort: 3332
      protocol: TCP
  type: LoadBalancer
  selector:
    app: pos-tech-diner-cliente-deployment
